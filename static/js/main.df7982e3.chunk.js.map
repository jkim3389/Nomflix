{"version":3,"sources":["Assets/notFoundPoster.png","Components/Section.js","Components/Loading.js","Components/Error.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/tvPresenter.js","Routes/TV/index.js","Routes/TV/tvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header/Header.js","Routes/Detail/TabsInformation/youtubeTab.js","Routes/Detail/TabsInformation/ProductionTab.js","Routes/Detail/TabsInformation/Tabs.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyle.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","StyledReactLoading","ReactLoading","Loading","type","color","React","Component","Text","props","Error","text","StyledLink","Link","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","length","map","movie","key","poster_path","vote_average","Date","release_date","getFullYear","instance","axios","create","baseURL","params","api_key","language","movieApi","get","movie_id","append_to_response","query","encodeURIComponent","tvApi","tv_id","HomeContainer","state","data","results","this","setState","TvPresenter","topRated","airingToday","tv","name","first_air_date","tvContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","term","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","console","log","target","Header","header","Nav","ul","Item","li","current","SLink","withRouter","pathname","location","VideoContainer","Video","iframe","YoutubeTab","videoList","result","videos","src","frameborder","allow","allowfullscreen","CompanyContainer","Company","Logo","bgImg","CountryContainer","Country","ProductionTab","companies","production_companies","countries","production_countries","company","index","logo_path","country","TabContainer","MenuContainer","MenuButton","MenuContent","search","Backdrop","Content","Cover","Information","ItemContainer","h1","Description","p","Divider","DetailPresenter","backdrop_path","runtime","episode_run_time","genres","shows","overview","Tabs","DetailContainer","includes","showDetails","match","parsedID","parseInt","isNaN","history","push","request","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,4C,+nBCG3C,IAAMC,EAAYC,UAAOC,IAAV,KAKTC,EAAQF,UAAOG,KAAV,KAILC,EAAOJ,UAAOC,IAAV,KA2BKI,EAnBC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,kBAACR,EAAD,KACI,kBAACG,EAAD,KAAQI,GACR,kBAACF,EAAD,KAAOG,K,2RClBf,IAAMR,EAAYC,UAAOC,IAAV,KAMTO,EAAqBR,kBAAOS,IAAPT,CAAH,KAIHU,E,uKAGb,OACI,kBAAC,EAAD,KACY,6BACI,kBAACF,EAAD,CAAoBG,KAAQ,OAAQC,MAAS,UAC7C,iD,GAPSC,IAAMC,W,+PCX3C,IAAMf,EAAYC,UAAOC,IAAV,KAKTc,EAAOf,UAAOG,KAAV,KACG,SAAAa,GAAK,OAAEA,EAAMJ,SAmBXK,EAdD,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMN,EAAR,EAAQA,MAAR,OACV,kBAAC,EAAD,KACI,kBAACG,EAAD,CAAMH,MAASA,GACVM,K,+rCCZb,IAAMC,EAAanB,kBAAOoB,IAAPpB,CAAH,KAMVD,EAAYC,UAAOC,IAAV,KAIToB,EAAQrB,UAAOC,IAAV,KACkB,SAAAe,GAAK,OAAEA,EAAMM,SAOpCC,EAASvB,UAAOG,KAAV,KAONqB,EAAiBxB,UAAOC,IAAV,IAGVoB,EAGAE,GAOJrB,EAAQF,UAAOG,KAAV,KAILsB,EAAOzB,UAAOG,KAAV,KA+BKuB,EA1BA,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,SAAUtB,EAAhB,EAAgBA,MAAOuB,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,KAA/B,IAAqCC,eAArC,gBACX,kBAACZ,EAAD,CAAYa,GAAMD,EAAQ,UAAD,OAAYJ,EAAZ,qBAA6BA,IAClD,kBAAC,EAAD,KACI,kBAACH,EAAD,KACI,kBAACH,EAAD,CAAOC,MAASM,EAAS,kCAAD,OAAoCA,GAAaK,EAAQ,MACjF,kBAACV,EAAD,KACI,0BAAMW,KAAK,MAAMC,aAAa,UAA9B,gBAEQ,IACPN,EAJL,QAOJ,kBAAC,EAAD,KAAQvB,GACR,kBAACmB,EAAD,KAAOK,M,oGCzDnB,IAAM/B,GAAYC,UAAOC,IAAV,KAiDAmC,GA5CO,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAYC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,QAASC,EAA1C,EAA0CA,MAA1C,OAClB,oCACA,kBAACC,EAAA,EAAD,KACI,sDAEHF,EACD,kBAAC,EAAD,MACA,kBAAC,GAAD,KACKH,GAAcA,EAAWM,OAAO,GACjC,kBAAC,EAAD,CAASrC,MAAM,eACV+B,EAAWO,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,CAAQC,IAAMD,EAAMlB,GAAIA,GAAMkB,EAAMlB,GAAIC,SAAYiB,EAAME,YAAazC,MAAQuC,EAAMvC,MAAQuB,OAAUgB,EAAMG,aAAclB,KAAS,IAAImB,KAAKJ,EAAMK,cAAeC,cAAepB,SAAW,QAKnMO,GAAYA,EAASK,OAAO,GAC7B,kBAAC,EAAD,CAASrC,MAAM,YACVgC,EAASM,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,CAAQC,IAAMD,EAAMlB,GAAIA,GAAMkB,EAAMlB,GAAIC,SAAYiB,EAAME,YAAazC,MAAQuC,EAAMvC,MAAQuB,OAAUgB,EAAMG,aAAclB,KAAS,IAAImB,KAAKJ,EAAMK,cAAeC,cAAepB,SAAW,QAInMQ,GAAWA,EAAQI,OAAO,GAC3B,kBAAC,EAAD,CAASrC,MAAM,WACViC,EAAQK,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CAAQC,IAAMD,EAAMlB,GAAIA,GAAMkB,EAAMlB,GAAIC,SAAYiB,EAAME,YAAazC,MAAQuC,EAAMvC,MAAQuB,OAAUgB,EAAMG,aAAclB,KAAS,IAAImB,KAAKJ,EAAMK,cAAeC,cAAepB,SAAW,QAInMU,GAAS,kBAAC,EAAD,CAAOvB,KAAQuB,EAAO7B,MAAQ,e,SC1C1CwC,G,QAAWC,EAAMC,OAAO,CAC1BC,QAAU,gCACVC,OAAS,CACLC,QAAS,mCACTC,SAAW,WAaNC,GACI,kBAAKP,GAASQ,IAAI,sBADtBD,GAEE,kBAAMP,GAASQ,IAAI,mBAFrBD,GAGC,kBAAMP,GAASQ,IAAI,kBAHpBD,GAIC,SAACE,GAAD,OAAcT,GAASQ,IAAT,gBAAsBC,GAAY,CACtDL,OAAS,CACLM,mBAAqB,aANpBH,GASA,SAACrD,GAAD,OAAW8C,GAASQ,IAAI,gBAAiB,CAC9CJ,OAAS,CACLO,MAAQC,mBAAmB1D,OAM1B2D,GACE,kBAAMb,GAASQ,IAAI,iBADrBK,GAEC,kBAAKb,GAASQ,IAAI,eAFnBK,GAGK,kBAAMb,GAASQ,IAAI,oBAHxBK,GAIC,SAACC,GAAD,OAAWd,GAASQ,IAAT,aAAmBM,GAAS,CAC7CV,OAAS,CACLM,mBAAqB,aANpBG,GASA,SAAC3D,GAAD,OAAW8C,GAASQ,IAAI,aAAc,CAC3CJ,OAAS,CACLO,MAAQC,mBAAmB1D,OC7CxB6D,G,4MCGXC,MAAQ,CACJ/B,WAAa,KACbC,SAAW,KACXC,QAAU,KACVC,SAAU,EACVC,MAAQ,M,qNAKsCkB,K,uBAArBtB,E,EAAdgC,KAAMC,Q,SAE2BX,K,uBAAnBrB,E,EAAd+B,KAAMC,Q,UAE4BX,K,iBAAlBpB,E,EAAhB8B,KAAMC,QAEbC,KAAKC,SAAS,CACVnC,aACAC,WACAC,Y,kDAGJgC,KAAKC,SAAS,CACV/B,MAAQ,2B,yBAGZ8B,KAAKC,SAAS,CACVhC,SAAQ,I,kKAIX,IAAD,EACoD+B,KAAKH,MAAtD/B,EADH,EACGA,WAAYC,EADf,EACeA,SAAUC,EADzB,EACyBA,QAASC,EADlC,EACkCA,QAASC,EAD3C,EAC2CA,MAE/C,OAAO,kBAAC,GAAD,CACHJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTE,MAASA,EACTD,QAAWA,Q,GAxCM3B,IAAMC,W,8FCInC,IAAMf,GAAYC,UAAOC,IAAV,MA0CAwE,GAtCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUnC,EAAb,EAAaA,QAASoC,EAAtB,EAAsBA,YAAanC,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,MAA5C,OAChB,oCACA,kBAACC,EAAA,EAAD,KACI,mDAEHF,EACD,kBAAC,EAAD,MACA,kBAAC,GAAD,KACKkC,GAAYA,EAAS/B,OAAS,GAC3B,kBAAC,EAAD,CAASrC,MAAQ,mBAAjB,IAAqCoE,EAAS9B,KAAI,SAACgC,GAAD,OAC9C,kBAAC,EAAD,CAAQ9B,IAAM8B,EAAGjD,GAAIA,GAAMiD,EAAGjD,GAAIC,SAAYgD,EAAG7B,YAAazC,MAAQsE,EAAGC,KAAOhD,OAAU+C,EAAG5B,aAAclB,KAAS,IAAImB,KAAK2B,EAAGE,gBAAiB3B,cAAepB,SAAW,OAD/K,KAKHQ,GAAWA,EAAQI,OAAS,GACzB,kBAAC,EAAD,CAASrC,MAAQ,iBAAjB,IAAmCiC,EAAQK,KAAI,SAACgC,GAAD,OAC3C,kBAAC,EAAD,CAAQ9B,IAAM8B,EAAGjD,GAAIA,GAAMiD,EAAGjD,GAAIC,SAAYgD,EAAG7B,YAAazC,MAAQsE,EAAGC,KAAOhD,OAAU+C,EAAG5B,aAAclB,KAAS,IAAImB,KAAK2B,EAAGE,gBAAiB3B,cAAepB,SAAW,OAD/K,KAKH4C,GAAeA,EAAYhC,OAAS,GACjC,kBAAC,EAAD,CAASrC,MAAQ,gBAAjB,IAAkCqE,EAAY/B,KAAI,SAACgC,GAAD,OAC9C,kBAAC,EAAD,CAAQ9B,IAAM8B,EAAGjD,GAAIA,GAAMiD,EAAGjD,GAAIC,SAAYgD,EAAG7B,YAAazC,MAAQsE,EAAGC,KAAOhD,OAAU+C,EAAG5B,aAAclB,KAAS,IAAImB,KAAK2B,EAAGE,gBAAiB3B,cAAepB,SAAW,OAD/K,KAKHU,GAAS,kBAAC,EAAD,CAAOvB,KAAQuB,EAAO7B,MAAQ,eCpCjCmE,G,4MCGXX,MAAQ,CACJM,SAAW,KACXnC,QAAU,KACVoC,YAAc,KACdnC,SAAU,EACVC,MAAQ,M,qNAKoCwB,K,uBAAnBS,E,EAAdL,KAAMC,Q,SAC0BL,K,uBAAlB1B,E,EAAd8B,KAAMC,Q,UAC8BL,K,iBAAtBU,E,EAAdN,KAAMC,QAEbC,KAAKC,SAAS,CACVE,WACAnC,UACAoC,gB,kDAGJJ,KAAKC,SAAS,CACV/B,MAAO,mC,yBAGX8B,KAAKC,SAAS,CACVhC,SAAU,I,kKAKZ,IAAD,EAEqD+B,KAAKH,MAAvDM,EAFH,EAEGA,SAAUnC,EAFb,EAEaA,QAASoC,EAFtB,EAEsBA,YAAanC,EAFnC,EAEmCA,QAASC,EAF5C,EAE4CA,MACjD,OAAO,kBAAC,GAAD,CACHiC,SAAYA,EACZnC,QAAWA,EACXoC,YAAeA,EACfnC,QAAWA,EACXC,MAASA,Q,GAvCQ5B,IAAMC,W,oVCInC,IAAMf,GAAYC,UAAOC,IAAV,MAGT+E,GAAOhF,UAAOiF,KAAV,MAIJC,GAAQlF,UAAOmF,MAAV,MAqDIC,GA/CS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,KAAM/C,EAA/B,EAA+BA,QAASC,EAAxC,EAAwCA,MAAO+C,EAA/C,EAA+CA,aAAcC,EAA7D,EAA6DA,WAA7D,OACpB,kBAAC,GAAD,KACI,kBAAC/C,EAAA,EAAD,KACI,uDAEJ,kBAACsC,GAAD,CAAMU,SAAUF,GACZ,kBAACN,GAAD,CACAS,YAAY,4BACZC,MAAOL,EACPM,SAAUJ,KAIbjD,EAAS,kBAAC,EAAD,MACV,oCACK6C,GAAeA,EAAY1C,OAAO,GACnC,kBAAC,EAAD,CAASrC,MAAM,UACV+E,EAAYzC,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CAAQC,IAAMD,EAAMlB,GAAIA,GAAMkB,EAAMlB,GAAIC,SAAYiB,EAAME,YAAazC,MAAQuC,EAAMvC,MAAQuB,OAAUgB,EAAMG,aAAclB,KAAS,IAAImB,KAAKJ,EAAMK,cAAeC,cAAepB,SAAW,QAGnMuD,GAAYA,EAAS3C,OAAS,GAC/B,kBAAC,EAAD,CACIrC,MAAQ,YADZ,IACyBgF,EAAS1C,KAAI,SAACgC,GAAD,OAC9B,kBAAC,EAAD,CAAQ9B,IAAM8B,EAAGjD,GAAIA,GAAMiD,EAAGjD,GAAIC,SAAYgD,EAAG7B,YAAazC,MAAQsE,EAAGC,KAAOhD,OAAU+C,EAAG5B,aAAclB,KAAS,IAAImB,KAAK2B,EAAGE,gBAAiB3B,cAAepB,SAAW,QAKlLU,GAAS,kBAAC,EAAD,CAAOvB,KAAQuB,IACxB6C,GAAYD,GAAkC,IAAnBC,EAAS3C,QAAqC,IAAtB0C,EAAY1C,QAC5D,kBAAC,EAAD,CAAOzB,KAAO,gBAAgBN,MAAQ,eClDvCkF,G,4MCGX1B,MAAQ,CACJiB,YAAc,KACdC,SAAW,KACXC,KAAO,GACP/C,SAAU,EACVC,MAAQ,M,EAGZ+C,aAAe,SAACO,GACZA,EAAMC,iBADgB,IAEfT,EAAQ,EAAKnB,MAAbmB,KACK,KAATA,GACC,EAAKU,eAETC,QAAQC,IAAIZ,I,EAGhBE,WAAa,SAACM,GAAU,IACLH,EAAUG,EAAlBK,OAAQR,MACfM,QAAQC,IAAIP,GACZ,EAAKpB,SAAS,CACVe,KAAOK,K,4LAIJL,EAAQhB,KAAKH,MAAbmB,K,SAEHhB,KAAKC,SAAS,CACVhC,SAAQ,I,SAE+BmB,GAAgB4B,G,uBAAtCF,E,EAAdhB,KAAMC,Q,SAC6BL,GAAasB,G,gBAAhCD,E,EAAhBjB,KAAQC,QAEfC,KAAKC,SAAS,CACVa,cACAC,a,kDAGJf,KAAKC,SAAS,CACV/B,MAAQ,uC,yBAGZ8B,KAAKC,SAAS,CACVhC,SAAQ,I,kKAIV,IAAD,EACkD+B,KAAKH,MAApDiB,EADH,EACGA,YAAaC,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,KAAM/C,EADhC,EACgCA,QAASC,EADzC,EACyCA,MAC9C,OAAO,kBAAC,GAAD,CACH4C,YAAeA,EACfC,SAAYA,EACZC,KAAQA,EACR/C,QAAWA,EACXC,MAASA,EACT+C,aAAgBjB,KAAKiB,aACrBC,WAAclB,KAAKkB,iB,GAzDF5E,IAAMC,W,kwBCCnC,IAAMuF,GAASrG,UAAOsG,OAAV,MAeNC,GAAMvG,UAAOwG,GAAV,MAIHC,GAAOzG,UAAO0G,GAAV,MAKqB,SAAA1F,GAAK,OAAGA,EAAM2F,QAAS,MAAQ,iBAGxDC,GAAQ5G,kBAAOoB,IAAPpB,CAAH,MAMI6G,gBAAW,gBAAYC,EAAZ,EAAEC,SAAUD,SAAZ,OACtB,kBAACT,GAAD,KAEI,kBAACE,GAAD,KACI,kBAACE,GAAD,CAAME,QAAwB,MAAbG,GACb,kBAACF,GAAD,CAAO5E,GAAK,KAAZ,WAEJ,kBAACyE,GAAD,CAAME,QAAwB,QAAbG,GACb,kBAACF,GAAD,CAAO5E,GAAK,OAAZ,OAEJ,kBAACyE,GAAD,CAAME,QAAwB,YAAbG,GACb,kBAACF,GAAD,CAAO5E,GAAK,WAAZ,gB,qaC/ChB,IAAMjC,GAAYC,UAAOC,IAAV,MAET+G,GAAiBhH,UAAOC,IAAV,MAQdgH,GAAQjH,UAAOkH,OAAV,MAuBIC,GAbI,SAAC,GAAD,IAA0BC,EAA1B,EAAEC,OAAQC,OAAQhD,QAAlB,OACf,kBAAC,GAAD,KACI,kBAAC0C,GAAD,KACI,kBAACC,GAAD,CAAOM,IAAG,wCAAmCH,EAAU,GAAGtE,KACtD0E,YAAY,IACZC,MAAM,0EACNC,gBAAkB,Y,grCCzBlC,IAAM3H,GAAYC,UAAOC,IAAV,MAMT0H,GAAmB3H,UAAOC,IAAV,MAQhB2H,GAAU5H,UAAOC,IAAV,MAWP4H,GAAO7H,UAAOC,IAAV,MAGmB,SAAAe,GAAK,OAAGA,EAAM8G,SAIrCC,GAAmB/H,UAAOC,IAAV,MAKhB+H,GAAUhI,UAAOC,IAAV,MAgCEgI,GAvBO,SAAC,GAAD,IAA+BC,EAA/B,EAAEb,OAAQc,qBAA8DC,EAAxE,EAA2Cf,OAAQgB,qBAAnD,OACnB,oCACC,kBAAC,GAAD,4BAEI,kBAACV,GAAD,KACKO,EAAUtF,KAAI,SAAC0F,EAASC,GAAV,OACf,kBAACX,GAAD,KACI,kBAACC,GAAD,CAAM/E,IAAKyF,EAAOT,MAASQ,EAAQE,UAAR,yCAAqDF,EAAQE,WAAcvG,EAAQ,MAC7GqG,EAAQzD,WAIjB,kBAACkD,GAAD,4BAEKK,EAAUxF,KAAI,SAAC6F,EAASF,GAAV,OACX,kBAACP,GAAD,kBAAgBS,EAAQ5D,a,iuCC1DxC,IAAM6D,GAAe1I,UAAOC,IAAV,MAKZ0I,GAAgB3I,UAAOwG,GAAV,MASboC,GAAa5I,UAAO0G,GAAV,MAUgB,SAAA1F,GAAK,OAAGA,EAAM2F,QAAS,oBAAsB,iBAEvEC,GAAQ5G,kBAAOoB,IAAPpB,CAAH,MAIL6I,GAAc7I,UAAOC,IAAV,MAgBF4G,IAXS7G,UAAOwG,GAAV,MAKNxG,UAAO0G,GAAV,MAMGG,aAAW,gBAAEE,EAAF,EAAEA,SAAUM,EAAZ,EAAYA,OAAZ,OACtB,kBAACqB,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,CAAYjC,QAA+B,eAApBI,EAAS+B,QAA8C,KAAnB/B,EAAS+B,QAChE,kBAAC,GAAD,CAAO9G,GAAE,UAAO+E,EAASD,SAAhB,eAAT,UAEJ,kBAAC8B,GAAD,CAAYjC,QAA+B,oBAApBI,EAAS+B,QAC5B,kBAAC,GAAD,CAAO9G,GAAE,UAAO+E,EAASD,SAAhB,oBAAT,eAEJ,kBAAC8B,GAAD,CAAajC,QAA+B,cAApBI,EAAS+B,QAC7B,kBAAC,GAAD,CAAO9G,GAAE,UAAO+E,EAASD,SAAhB,cAAT,SAEJ,kBAAC8B,GAAD,CAAajC,QAA+B,gBAApBI,EAAS+B,QAC7B,kBAAC,GAAD,CAAO9G,GAAE,UAAO+E,EAASD,SAAhB,gBAAT,WAEJ,kBAAC8B,GAAD,CAAajC,QAA+B,cAApBI,EAAS+B,QAC7B,kBAAC,GAAD,CAAO9G,GAAE,UAAO+E,EAASD,SAAhB,cAAT,UAGR,kBAAC+B,GAAD,KACyB,eAApB9B,EAAS+B,QAA+C,KAApB/B,EAAS+B,OAAgB,kBAAC,GAAD,CAAYzB,OAAUA,IAAa,KAC5E,oBAApBN,EAAS+B,OAA+B,kBAAC,GAAD,CAAezB,OAAUA,IAAa,KAC1D,cAApBN,EAAS+B,OAAyB,YAAc,KAC5B,gBAApB/B,EAAS+B,OAA4B,cAAgB,KACjC,cAApB/B,EAAS+B,OAA0B,YAAc,W,gmDCtE9D,IAAM/I,GAAYC,UAAOC,IAAV,MAOT8I,GAAW/I,UAAOC,IAAV,MAMe,SAAAe,GAAK,OAAIA,EAAM8G,SAQtCkB,GAAUhJ,UAAOC,IAAV,MAQPgJ,GAAQjJ,UAAOC,IAAV,MACkB,SAAAe,GAAK,OAAGA,EAAM8G,SAQrCoB,GAAclJ,UAAOC,IAAV,MAMXkJ,GAAgBnJ,UAAOC,IAAV,MAIbC,GAAQF,UAAOoJ,GAAV,MAILC,GAAcrJ,UAAOsJ,EAAV,MAOX7C,GAAOzG,UAAOG,KAAV,MAGJoJ,GAAUvJ,UAAOG,KAAV,MA4CEqJ,GAzCS,SAAC,GAAD,IAAEnC,EAAF,EAAEA,OAAe7E,GAAjB,EAAUC,MAAV,EAAiBD,SAAjB,OACpB,oCACA,kBAACE,EAAA,EAAD,KACI,qDAEHF,EACD,kBAAC,EAAD,MACA,kBAAC,GAAD,KACI,kBAACuG,GAAD,CAAUjB,MAAK,6CAA0CT,EAAOoC,iBAChE,kBAACT,GAAD,KACI,kBAACC,GAAD,CAAOnB,MAAST,EAAOtE,YAAP,6CAA0DsE,EAAOtE,aAAgBd,EAAQ,MACzG,kBAACiH,GAAD,KACI,kBAAC,GAAD,KACK7B,EAAO/G,MAAO+G,EAAO/G,MAAQ+G,EAAOxC,MAEzC,kBAACsE,GAAD,KACI,kBAAC,GAAD,KAAO9B,EAAOnE,aAAe,IAAID,KAAKoE,EAAOnE,cAAeC,cAAiB,IAAIF,KAAKoE,EAAOvC,gBAAiB3B,eAC9G,kBAACoG,GAAD,aACA,kBAAC,GAAD,KAAOlC,EAAOqC,QAAUrC,EAAOqC,QAAUrC,EAAOsC,iBAAiB,GAAjE,QACA,kBAACJ,GAAD,aACA,kBAAC,GAAD,KAAOlC,EAAOuC,QAAUvC,EAAOuC,OAAOhH,KAAI,SAACiH,EAAOtB,GAAR,OAAkBA,IAAUlB,EAAOuC,OAAOjH,OAAO,EAAIkH,EAAMhF,KAA1C,UAAoDgF,EAAMhF,KAA1D,YAE/D,kBAACwE,GAAD,KACKhC,EAAOyC,UAEZ,kBAACC,GAAD,CAAM1C,OAAUA,SC9FjB2C,G,kDCEX,WAAYhJ,GAAQ,IAAD,sBAEf,IAAM8F,GADN,cAAM9F,IACgBA,MAAM+F,SAASD,SAFtB,OAGf,EAAK1C,MAAQ,CACTiD,OAAS,KACT7E,SAAU,EACVC,MAAQ,KACRV,QAAU+E,EAASmD,SAAS,YAPjB,E,gEAaf1F,KAAK2F,gB,iKAGCvI,EAAK4C,KAAKvD,MAAMmJ,MAAM3G,OAAO7B,GAC7ByI,EAAWC,SAAS1I,IAEvB2I,MAAOF,G,yCACC7F,KAAKvD,MAAMuJ,QAAQC,KAAK,M,UAE/BnD,EAAS,KACNtF,EAAWwC,KAAKH,MAAhBrC,Q,UAGAA,E,kCACuB4B,GAAiByG,G,QAAjCK,E,OACNpD,EAASoD,EAAQpG,K,yCAEKJ,GAAcmG,G,QAA9BK,E,OACNpD,EAASoD,EAAQpG,K,0DAIrBE,KAAKC,SAAS,CACV/B,MAAQ,oC,yBAGZ8B,KAAKC,SAAS,CACVhC,SAAQ,EACR6E,WAEJnB,QAAQC,IAAIkB,G,kKAGT,IAAD,EAE2B9C,KAAKH,MAA/BiD,EAFD,EAECA,OAAQ7E,EAFT,EAESA,QAASC,EAFlB,EAEkBA,MACxB,OACI,kBAAC,GAAD,CACI4E,OAAUA,EACV7E,QAAWA,EACXC,MAASA,Q,GAtDI5B,IAAMC,WCKpB,qBACX,kBAAC,IAAD,KACI,oCACI,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4J,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,KAAK,MAAME,UAAWE,KAE7B,kBAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,kBAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,kBAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,kBAAC,IAAD,CAAUC,KAAK,IAAIjJ,GAAG,U,qgBCftC,IAkBekJ,GAlBMC,4BAAH,KACZC,MCSSC,G,uKATX,OACA,oCACE,kBAACC,GAAD,MACA,kBAACC,GAAD,W,GALYzK,aCClB0K,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.df7982e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notFoundPoster.bd9f46db.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom : 50px;\n    }\n`\nconst Title = styled.span`\n    font-size : 20px;\n    font-weight : 600;\n`\nconst Grid = styled.div`\n    margin-top : 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap : 25px;\n`\n\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n)\n\nSection.propTypes = {\n    title : PropTypes.string.isRequired,\n    children : PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired \n}\n\n\n\n\n\nexport default Section","import React from \"react\";\nimport ReactLoading from \"react-loading\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    align-items : center;\n    display: flex;\n    justify-content : center;\n    font-size : 32px\n`\nconst StyledReactLoading = styled(ReactLoading)`\n    margin:auto;\n`\n\nexport default class Loading extends React.Component {\n\n    render() {\n        return (\n            <Container>\n                        <div>\n                            <StyledReactLoading type = {\"bars\"} color = {\"white\"}/>\n                            <div>Loading...</div>\n                        </div>\n            </Container>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    width : 100 vw;\n    display : flex;\n    justify-content : center;\n`\nconst Text = styled.span`\n    color: ${props=>props.color};\n    font-weight: 600;\n`\n\n\nconst Error = ({text, color}) => (\n    <Container>\n        <Text color = {color}>\n            {text}\n        </Text>\n    </Container>\n)\n\n\nError.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Error\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport {Link} from 'react-router-dom'\n\n\nconst StyledLink = styled(Link)`\n    &:hover {\n            text-decoration : none;\n            color : white;\n        }\n`\nconst Container = styled.div`\n    font-size : 12px;\n`\n\nconst Image = styled.div`\n    background-image : url(${props=>props.bgUrl});\n    height : 180px;\n    background-size : cover;\n    border-radius : 10px;\n    background-position : center center;\n    transition: opacity 0.1s ease-in-out;\n`\nconst Rating = styled.span`\n    position : absolute;\n    bottom : 5px;\n    right : 5px;\n    opacity  : 0;\n    transition: opacity 0.1s ease-in-out;\n`\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity : 1\n        }\n    }\n    position : relative;\n`\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom : 3px;\n`\nconst Year = styled.span`\n    font-size : 10px;\n    color: rgba(255,255,255,0.5);\n`\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) => (\n    <StyledLink to = {isMovie? `/movie/${id}/` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl = {imageUrl? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../Assets/notFoundPoster.png\")}/>\n                <Rating>\n                    <span role=\"img\" aria-label = \"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </StyledLink>\n)\n\nPoster.propTypes = {\n    id  : PropTypes.number.isRequired,\n    imageUrl : PropTypes.string, \n    title : PropTypes.string.isRequired, \n    rating : PropTypes.number, \n    year : PropTypes.number,\n    isMovie : PropTypes.bool\n}\nexport default Poster","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Section from '../../Components/Section'\nimport Loading from '../../Components/Loading'\nimport Error from '../../Components/Error'\nimport Poster from '../../Components/Poster'\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n    padding : 20px;\n`\n\n//children doesn't provide to prop. \nconst HomePresenter = ({nowPlaying, upcoming, popular, loading, error}) => (\n    <> \n    <Helmet>\n        <title>  Movie | Nomflix </title>\n    </Helmet>\n    {loading? \n    <Loading/>: (\n    <Container>\n        {nowPlaying && nowPlaying.length>0 && \n        <Section title=\"Now Playing\">\n            {nowPlaying.map((movie)=> \n                <Poster key= {movie.id} id = {movie.id} imageUrl = {movie.poster_path} title= {movie.title}  rating = {movie.vote_average} year = {(new Date(movie.release_date)).getFullYear()} isMovie = {true}/>\n//                <span key = {movie.id}>{movie.title}</span>\n            )}\n        </Section>}\n\n        {upcoming && upcoming.length>0 && \n        <Section title=\"Upcoming\">\n            {upcoming.map((movie)=> \n                <Poster key= {movie.id} id = {movie.id} imageUrl = {movie.poster_path} title= {movie.title}  rating = {movie.vote_average} year = {(new Date(movie.release_date)).getFullYear()} isMovie = {true}/>\n            )}\n        </Section>}\n\n        {popular && popular.length>0 && \n        <Section title=\"Popular\">\n            {popular.map((movie)=> \n                <Poster key= {movie.id} id = {movie.id} imageUrl = {movie.poster_path} title= {movie.title}  rating = {movie.vote_average} year = {(new Date(movie.release_date)).getFullYear()} isMovie = {true}/>\n            )}\n        </Section>} \n\n        {error && <Error text = {error} color = \"#e74c3c\"/>}\n    </Container>\n)}</>)\n\nHomePresenter.propTypes = {\n    nowPlaying : PropTypes.array,\n    upcoming : PropTypes.array, \n    popular : PropTypes.array, \n    loading : PropTypes.bool.isRequired, \n    error : PropTypes.string\n}\n\n\n\nexport default HomePresenter ","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL : \"https://api.themoviedb.org/3/\",\n    params : {\n        api_key :\"6b9bd926342ea831942d632cc9886879\",\n        language : \"en-US\"\n\n    }\n})\n// instance.get(\"movie/now_playing\")\n// instance.interceptors.request.use(config => {\n//     config.params = config.params || {};\n//     console.log(config)\n//     config.params['api_key'] = \"6b9bd926342ea831942d632cc9886879\";\n//     config.params['language'] = 'en-US';\n//     return config;\n// })\n\nexport const movieApi = {\n    nowPlaying : ()=> instance.get('movie/now_playing'),\n    upcoming : () => instance.get('movie/upcoming'),\n    popular : () => instance.get('movie/popular'),\n    details : (movie_id) => instance.get(`movie/${movie_id}`, {\n        params : {\n            append_to_response : \"videos\"\n        }\n    }),\n    search : (title) => instance.get('/search/movie', {\n        params : {\n            query : encodeURIComponent(title)\n        }     \n    })\n}\n\n\nexport const tvApi = {\n    topRated : () => instance.get('tv/top_rated'),\n    popular : ()=> instance.get('tv/popular'),\n    airingToday : () => instance.get('tv/airing_today'),\n    details : (tv_id) => instance.get(`tv/${tv_id}`, {\n        params : {\n            append_to_response : \"videos\"\n        }\n    }),\n    search : (title) => instance.get('/search/tv', {\n        params : {\n            query : encodeURIComponent(title)\n        } \n    })\n}\n\n// export default instance","import HomeContainer from './HomeContainer'\n\nexport default HomeContainer","import React from 'react'\nimport HomePresenter from './HomePresenter'\nimport {movieApi} from '../../api'\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying : null ,\n        upcoming : null,\n        popular : null,\n        loading : true,\n        error : null\n    }\n\n    async componentDidMount() {\n        try {\n            const {data:{results:nowPlaying}} = await movieApi.nowPlaying()\n            \n            const {data:{results:upcoming}} = await movieApi.upcoming()\n\n            const {data:{results : popular}} = await movieApi.popular()\n            \n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch(e) {\n            this.setState({\n                error : \"Can't find information\"\n            })\n        } finally {\n            this.setState({\n                loading:false\n            })\n        }\n    }\n    render(){\n        const {nowPlaying, upcoming, popular, loading, error} = this.state\n       \n        return <HomePresenter \n            nowPlaying={nowPlaying}\n            upcoming={upcoming} \n            popular={popular}\n            error = {error}\n            loading = {loading}\n            />\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Section from '../../Components/Section'\nimport Loading from '../../Components/Loading'\nimport Error from '../../Components/Error'\nimport Poster from '../../Components/Poster'\nimport {Helmet} from 'react-helmet'\nconst Container = styled.div`\n    padding : 20px;\n`\n\nconst TvPresenter = ({ topRated, popular, airingToday, loading, error })=> (\n    <>\n    <Helmet>\n        <title>  TV | Nomflix </title>\n    </Helmet>\n    {loading ? \n    <Loading/>:(\n    <Container>\n        {topRated && topRated.length > 0 && (\n            <Section title = \"Top Rated Shows\"> {topRated.map((tv)=> \n                <Poster key= {tv.id} id = {tv.id} imageUrl = {tv.poster_path} title= {tv.name}  rating = {tv.vote_average} year = {(new Date(tv.first_air_date)).getFullYear()} isMovie = {false}/>            \n            )} </Section>\n        )}\n\n        {popular && popular.length > 0 && (\n            <Section title = \"Popular Shows\"> {popular.map((tv)=> \n                <Poster key= {tv.id} id = {tv.id} imageUrl = {tv.poster_path} title= {tv.name}  rating = {tv.vote_average} year = {(new Date(tv.first_air_date)).getFullYear()} isMovie = {false}/>\n            )} </Section>\n        )}\n\n        {airingToday && airingToday.length > 0 && (\n            <Section title = \"Airing Today\"> {airingToday.map((tv)=> \n                <Poster key= {tv.id} id = {tv.id} imageUrl = {tv.poster_path} title= {tv.name}  rating = {tv.vote_average} year = {(new Date(tv.first_air_date)).getFullYear()} isMovie = {false}/>\n\n            )} </Section>\n        )}\n        {error && <Error text = {error} color = \"#e74c3c\"/>}\n    </Container>\n)}</>)\n\nTvPresenter.propTypes = {\n    topRated : PropTypes.array,\n    popular : PropTypes.array,\n    airingToday : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string\n}\n\nexport default TvPresenter","import tvContainer from './tvContainer'\n\nexport default tvContainer","import React from 'react'\nimport TvPresenter from './tvPresenter'\nimport {tvApi} from '../../api'\n\nexport default class extends React.Component {\n    state = {\n        topRated : null,\n        popular : null,\n        airingToday : null,\n        loading : true,\n        error : null\n    }\n\n    async componentDidMount() {\n        try {\n            const {data:{results:topRated}} = await tvApi.topRated()\n            const {data:{results:popular}} = await tvApi.popular()\n            const {data:{results:airingToday}} = await tvApi.airingToday()\n                \n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n        } catch(e) {\n            this.setState({\n                error: \"can not find information on TV\"\n            })\n        } finally {\n            this.setState({\n                loading : false\n            })\n        }\n    }\n\n    render() {\n        \n        const { topRated, popular, airingToday, loading, error} = this.state\n        return <TvPresenter\n            topRated = {topRated}\n            popular = {popular}\n            airingToday = {airingToday}\n            loading = {loading}\n            error = {error}\n        />\n    }\n}","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Loading from '../../Components/Loading'\nimport Section from '../../Components/Section'\nimport Error from '../../Components/Error'\nimport Poster from '../../Components/Poster'\nimport {Helmet} from 'react-helmet'\nconst Container = styled.div`\n    padding: 20px;\n`\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`\nconst Input = styled.input`\n    all: unset;\n    font-size: 30px;\n    width: 100%;\n`\n\nconst SearchPresenter = ({movieResult, tvResult, term, loading, error, handleSubmit, updateTerm})=> (\n    <Container>\n        <Helmet>\n            <title>  Search | Nomflix </title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input \n            placeholder=\"Search Movies or TV shows\" \n            value={term} \n            onChange={updateTerm}\n            />\n        </Form>\n\n        {loading? <Loading/> :  \n        <>\n            {movieResult && movieResult.length>0 && \n            <Section title=\"Movies\">\n                {movieResult.map((movie)=> \n                    <Poster key= {movie.id} id = {movie.id} imageUrl = {movie.poster_path} title= {movie.title}  rating = {movie.vote_average} year = {(new Date(movie.release_date)).getFullYear()} isMovie = {true}/>\n                )}\n            </Section>}\n            {tvResult && tvResult.length > 0 && (\n            <Section \n                title = \"TV Shows\"> {tvResult.map((tv)=> \n                    <Poster key= {tv.id} id = {tv.id} imageUrl = {tv.poster_path} title= {tv.name}  rating = {tv.vote_average} year = {(new Date(tv.first_air_date)).getFullYear()} isMovie = {false}/>\n                )} \n            </Section>\n            )}\n        \n            {error && <Error text = {error}/>}\n            {tvResult && movieResult && tvResult.length ===0 && movieResult.length ===0 && (\n                <Error text = \"Nothing Found\" color = \"#95a5a6\"/>\n            )}\n        </>}\n    </Container>\n)\n\nSearchPresenter.propTypes = {\n    movieResult : PropTypes.array , \n    tvResult : PropTypes.array , \n    term : PropTypes.string , \n    loading : PropTypes.bool.isRequired , \n    error : PropTypes.string , \n    handleSubmit : PropTypes.func.isRequired ,\n    updateTerm : PropTypes.func.isRequired \n}\n\nexport default SearchPresenter\n","import SearchContainer from './SearchContainer'\n\nexport default SearchContainer","import React from 'react'\nimport SearchPresenter from './SearchPresenter'\nimport {tvApi, movieApi} from '../../api'\n\nexport default class extends React.Component {\n    state = {\n        movieResult : null,\n        tvResult : null,\n        term : \"\",\n        loading : false,\n        error : null\n    }\n    debug\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const {term} = this.state\n        if(term !== \"\") {\n            this.searchByTerm()\n        }  \n        console.log(term)\n    }\n\n    updateTerm = (event)=> {\n        const {target:{value}} = event\n        console.log(value)\n        this.setState({\n            term : value\n        })\n    }\n    async searchByTerm() {\n        const {term} = this.state\n        try {\n            this.setState({\n                loading:true\n            })\n            const {data:{results:movieResult}} = await movieApi.search(term)\n            const {data : {results:tvResult}} = await tvApi.search(term)\n            \n            this.setState({\n                movieResult,\n                tvResult\n            })\n        } catch(e){\n            this.setState({\n                error : \"can not find information on search\"\n            })\n        } finally {\n            this.setState({\n                loading:false\n            })\n        }\n    }\n    render() {\n        const { movieResult, tvResult, term, loading, error} = this.state\n        return <SearchPresenter\n            movieResult = {movieResult}\n            tvResult = {tvResult}\n            term = {term}\n            loading = {loading}\n            error = {error}\n            handleSubmit = {this.handleSubmit}\n            updateTerm = {this.updateTerm}\n\n        />\n    }\n}","import React from 'react'\n// import styles from './Header.module.css'\nimport styled from 'styled-components'\nimport {Link, withRouter} from 'react-router-dom'\n\nconst Header = styled.header`\ncolor: white;\nposition : fixed;\ntop : 0px;\nleft : 0px;\nwidth : 100%;\nheight : 50px;\ndisplay : flex;\nalign-items : center;\n\nbackground-color: rgba(20,20,20,0.8);\nz-index : 10;\nbox-shadow : 0px 1px 5px 2px rgba(0,0,0,0.8);\n`\n\nconst Nav = styled.ul`\n    display:flex\n`\n\nconst Item = styled.li`\n    width : 80px;\n    height : 50px;\n    text-align : center;\n    justify-items : center;\n    border-bottom: 5px solid ${props=> props.current? \"red\" : \"transparent\"};\n`\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display : flex;\n    align-items : center;\n    justify-content : center;\n`\nexport default withRouter(({location:{pathname}})=>(\n    <Header>\n\n        <Nav>\n            <Item current = {pathname === '/'}>\n                <SLink to = \"/\">Movies</SLink>\n            </Item>\n            <Item current = {pathname === '/TV'}>\n                <SLink to = \"/TV\">TV</SLink>\n            </Item>\n            <Item current = {pathname === '/search'}>\n                <SLink to = \"/search\">Search</SLink>\n            </Item>\n\n        </Nav>\n    </Header>\n))","import React from 'react'\nimport styled from 'styled-components'\nconst Container = styled.div``\n\nconst VideoContainer = styled.div`\n    position: relative;\n    width: 100%;\n    height: 0;\n    padding-bottom: 56.25%;\n    margin-bottom : 20px;\n`\n\nconst Video = styled.iframe`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`\n\n\n\nconst YoutubeTab = ({result:{videos:{results:videoList}}}) => (\n    <Container>\n        <VideoContainer>\n            <Video src={`https://www.youtube.com/embed/${videoList[0].key}`} \n                frameborder=\"0\" \n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n                allowfullscreen = \"true\">\n            </Video>\n        </VideoContainer>\n    </Container>\n)\n\n\nexport default YoutubeTab\n\n\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div` \n    background-color : rgba(0,0,0, 0.3);\n    padding : 20px;\n    margin-bottom : 20px;\n    `\n\nconst CompanyContainer = styled.div`\n    margin-top : 20px;\n    display : grid;\n    grid-template-columns : repeat(auto-fill, 180px);\n    grid-gap : 15px;\n\n`\n\nconst Company = styled.div`\n    /* width : 50%; */\n    flex: 1;\n    height: auto;\n    background-color: rgba(24, 24, 28, 0.85);\n    border-radius: 4px;\n    padding: 5px;\n    color: rgba(255, 255, 255, 0.6);\n    text-align: center;\n    /* display : flex; */\n`\nconst Logo = styled.div`\n    height : 150px;\n    width: 100%;\n    background-image : url(${props=> props.bgImg});\n    background-size : cover;\n    background-position : center center;\n`\nconst CountryContainer = styled.div`\n    background-color : rgba(0,0,0, 0.3);\n    padding : 20px;\n`\n\nconst Country = styled.div`\n    margin-top : 10px;\n    padding : 10px 10px;\n    background-color: rgba(24, 24, 28, 0.85);\n`\n\n\n\n\nconst ProductionTab = ({result:{production_companies:companies}, result:{production_countries:countries}}) => (\n   <>\n    <Container>\n        Production Companies\n        <CompanyContainer>      \n            {companies.map((company, index) => (\n            <Company>\n                <Logo key={index} bgImg = {company.logo_path? `https://image.tmdb.org/t/p/w300${company.logo_path}` : require('../../../Assets/notFoundPoster.png')}/>\n                {company.name}                \n            </Company>))}\n        </CompanyContainer>\n    </Container>\n        <CountryContainer>\n        Production Countries\n            {countries.map((country, index) => (\n                <Country>{` - ${country.name}`}</Country>\n            ))}\n            \n        </CountryContainer>\n    </>\n)\n\n\nexport default ProductionTab\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Link, withRouter} from 'react-router-dom'\nimport YoutubeTab from './youtubeTab'\nimport ProductionTab from './ProductionTab'\n\nconst TabContainer = styled.div`\n    width : 100%;\n    height : 80%;\n   \n`\nconst MenuContainer = styled.ul`\n    display : flex;\n    width : 70%;\n    background-color: rgba(0,0,0,0.3);\n    border-radius : 10px;\n    /* justify-content : center; */\n    margin-bottom : 30px;\n    /* padding : 0px */\n`\nconst MenuButton = styled.li`\n    /* margin : 15px; */\n    display : inline-block;\n    list-style-type : none;\n    padding : 15px;\n    height : 100%;\n    width : 100%;\n    justify-content : center;\n    text-align : center;\n    align-items : center;\n    border-bottom : solid 3px ${props=> props.current? \"rgba(255,255,255)\" : \"transparent\"};\n`\nconst SLink = styled(Link)`\n\n\n`\nconst MenuContent = styled.div`\n    width : 70%;\n    height : 100%;\n`\n\nconst CircleContainer = styled.ul`\n    width: 100%;\n    display : flex;\n    justify-content : center;\n`\nconst Circle = styled.li`\n    padding : 20px 20px;\n    margin : 0px 20px;\n    background-color : rgba(255,255,255, 0.5);\n    border-radius : 40%;\n`\nexport default withRouter(({location, result}) => (\n    <TabContainer>\n        <MenuContainer>\n            <MenuButton current = {location.search === \"?tab=video\" || location.search ===\"\"}>\n                <SLink to = {`${location.pathname}?tab=video`}>Video</SLink>\n            </MenuButton>\n            <MenuButton current = {location.search === \"?tab=production\"}>\n                <SLink to = {`${location.pathname}?tab=production`}>Production</SLink>    \n            </MenuButton>\n            <MenuButton  current = {location.search === \"?tab=cast\"}>\n                <SLink to = {`${location.pathname}?tab=cast`}>Cast</SLink>        \n            </MenuButton>\n            <MenuButton  current = {location.search === \"?tab=series\"}>\n                <SLink to = {`${location.pathname}?tab=series`}>Series</SLink>        \n            </MenuButton>\n            <MenuButton  current = {location.search === \"?tab=more\"}> \n                <SLink to = {`${location.pathname}?tab=more`}>More</SLink>        \n            </MenuButton>\n        </MenuContainer>\n        <MenuContent>\n            {location.search === '?tab=video' || location.search === \"\" ? <YoutubeTab result = {result} /> : null}\n            {location.search === '?tab=production' ? <ProductionTab result = {result} /> : null}\n            {location.search === '?tab=cast' ? 'cast here' : null}\n            {location.search === '?tab=series'  ? 'series here' : null}\n            {location.search === '?tab=more'  ? 'more here' : null}\n        </MenuContent>\n    </TabContainer>\n\n))\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Loading from '../../Components/Loading'\nimport {Helmet} from 'react-helmet'\nimport Tabs from './TabsInformation/Tabs'\nconst Container = styled.div`\n    height : calc(100vh - 50px);\n    width : 100%;\n    position : relative;\n    padding : 50px\n`\n\nconst Backdrop = styled.div`\n    position : absolute;\n    top: 0;\n    left : 0;\n    width : 100%;\n    height : 100%;\n    background-image : url(${props => props.bgImg});\n    background-position : center center;\n    background-size : cover;\n    filter : blur(3px);\n    opacity : 0.5;\n    z-index : 0;\n\n`\nconst Content = styled.div`\n    display : flex;\n    width : 100%;\n    height : 100%;\n    z-index : 1;\n    position : relative;\n`\n\nconst Cover = styled.div`\n    background-image : url(${props=> props.bgImg});\n    background-size : cover;\n    background-position : center center;\n    height: 100%;\n    width: 30%;\n    border-radius : 10px;\n`\n\nconst Information = styled.div`\n    height : 100%;\n    width : 70%;\n    margin-left : 20px;\n`\n\nconst ItemContainer = styled.div`\n margin : 20px 0;\n`\n\nconst Title = styled.h1`\n    font-size : 32px;\n    margin-bottom : 20px;\n`\nconst Description = styled.p`\n    font-size : 12px;\n    opacity : 0.7;\n    line-height : 2;\n    width : 70%;\n    margin-bottom : 20px;\n`\nconst Item = styled.span`\n\n`\nconst Divider = styled.span`\n    margin : 0 10px;\n`\nconst DetailPresenter = ({result, error, loading}) => (\n    <>\n    <Helmet>\n        <title>Details | Nomflix</title>\n    </Helmet>\n    {loading? \n    <Loading/> : (\n    <Container>\n        <Backdrop bgImg = {`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n        <Content>\n            <Cover bgImg = {result.poster_path? `https://image.tmdb.org/t/p/original${result.poster_path}` : require('../../Assets/notFoundPoster.png')}/>\n            <Information>\n                <Title>\n                    {result.title? result.title : result.name}\n                </Title>\n                <ItemContainer>\n                    <Item>{result.release_date? (new Date(result.release_date)).getFullYear() : (new Date(result.first_air_date)).getFullYear()}</Item>\n                    <Divider>·</Divider>\n                    <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} Min</Item>\n                    <Divider>·</Divider>\n                    <Item>{result.genres && result.genres.map((shows, index)=> (index === result.genres.length-1)? shows.name : `${shows.name} / `)}</Item>\n                </ItemContainer>\n                <Description>\n                    {result.overview}\n                </Description>\n                <Tabs result = {result}></Tabs>\n            </Information>\n            \n        </Content>\n\n    </Container>\n    )}\n    </>\n)\n\nDetailPresenter.propTypes = {\n    result : PropTypes.object,\n    error : PropTypes.string,\n    loading : PropTypes.bool.isRequired\n}\n\nexport default DetailPresenter","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer","import React from 'react'\nimport DetailPresenter from './DetailPresenter'\nimport {movieApi, tvApi} from '../../api'\nexport default class extends React.Component {\n    constructor(props) {\n        super(props)\n        const pathname = this.props.location.pathname\n        this.state = {\n            result : null,\n            loading : true, \n            error : null,\n            isMovie : pathname.includes(\"/movie/\")\n    \n        }\n    }\n\n    componentDidMount() {\n        this.showDetails()\n    }\n    async showDetails() {\n        const id = this.props.match.params.id\n        const parsedID = parseInt(id)\n        \n        if(isNaN (parsedID)) {\n            return this.props.history.push('/')\n        }\n        let result = null;\n        const {isMovie} = this.state\n        \n        try {\n            if(isMovie) {\n                const request = await movieApi.details(parsedID)\n                result = request.data\n            } else {\n                const request = await tvApi.details(parsedID)\n                result = request.data\n            }\n            \n        } catch(e) {\n            this.setState({\n                error : \"cant find information on detail\"\n            })\n        } finally {\n            this.setState({\n                loading:false,\n                result\n            })\n            console.log(result)\n        }\n    }\n    render () {\n\n        const {result, loading, error} = this.state\n        return (\n            <DetailPresenter\n                result = {result}\n                loading = {loading}\n                error = {error}\n            />\n        )\n    }\n}\n\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\nimport Home from '../Routes/Home'\nimport TV from '../Routes/TV'\nimport Search from '../Routes/Search'\nimport Header from 'Components/Header/Header.js'\nimport Detail from '../Routes/Detail'\n\nexport default () => (\n    <Router>\n        <>\n            <Header/>\n            <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/TV\" component={TV}/>\n                {/* <Route path=\"/TV/popular\" render={()=><h1>Popular</h1>}/> */}\n                <Route path=\"/Search\" component={Search}/>\n                <Route path=\"/Movie/:id\" component={Detail}/>\n                <Route path=\"/Show/:id\" component={Detail}/> \n                <Redirect from=\"*\" to=\"/\" />\n                \n            </Switch>\n        </>\n    </Router>\n)","\nimport {createGlobalStyle} from 'styled-components'\nimport reset from 'styled-reset'\n\nconst globalStyles = createGlobalStyle`\n    ${reset}\n    a {\n        text-decoration:none;\n        color:inherit;\n    }\n    * {\n        box-sizing:border-box;\n    }\n    body {\n\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color : rgba(20,20,20,1);\n        color : white;\n        padding-top : 50px;\n    }\n    `\nexport default globalStyles","import React, {Component} from 'react';\nimport Router from 'Components/Router.js'\nimport GlobalStyles from 'Components/GlobalStyle.js'\nclass App extends Component {\n  render(){\n    return (\n    <>\n      <Router/>\n      <GlobalStyles/>\n    </>\n    )  \n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport  './api'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}